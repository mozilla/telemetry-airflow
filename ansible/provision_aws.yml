- name: provision ECS cluster
  hosts: localhost
  vars:
    ecs_cluster_size: 2  # need at least 2 to update a running service

  tasks:
    - name: create ECS cluster for telemetry
      ecs_cluster:
        region: "{{ region }}"
        name: "{{ ecs_cluster_name }}"
        state: present

    - name: create role for container instances
      cloudformation:
        stack_name: "telemetry-ecs-cloudformation"
        state: "present"
        region: "{{ region }}"
        disable_rollback: true
        template: "ansible/files/cloudformation.json"
        tags:
          type: "telemetry"
          application: "ecs"
      register: cloudformation

    - name: create security group for load balancer
      ec2_group:
        name: "{{ elb_sg_name }}"
        description: Telemetry Workflow ELB
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            from_port: all
            to_port: all
            cidr_ip: 0.0.0.0/0
        vpc_id: "{{ ecs_vpc_id }}"
      register: elb_sg

    - name: create security group for container instances
      ec2_group:
        name: "{{ ecs_sg_name }}"
        description: telemetry ECS
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            group_id: "{{ elb_sg.group_id }}"
        rules_egress:
          - proto: all
            from_port: all
            to_port: all
            cidr_ip: 0.0.0.0/0
        vpc_id: "{{ ecs_vpc_id }}"
      register: ecs_sg

    - name: create launch configuration for the cluster ASG
      ec2_lc:
        name: "{{ ecs_asg_lc_name }}"
        image_id: ami-a28476c2
        region: "{{ region }}"
        instance_type: "{{ ecs_instance_type }}"
        key_name: "{{ ecs_key_name }}"
        assign_public_ip: yes
        security_groups:
          - "{{ ecs_sg.group_id }}"
        instance_profile_name: "{{ cloudformation.stack_outputs.InstanceProfile }}"
        user_data: |
          #!/bin/bash
          echo ECS_CLUSTER={{ ecs_cluster_name }} >> /etc/ecs/ecs.config
      register: ec2_lc

    - name: create cluster ASG
      ec2_asg:
        name: "{{ ecs_asg_asg_name }}"
        region: "{{ region }}"
        launch_config_name: "{{ ec2_lc.name }}"
        health_check_period: 60
        health_check_type: EC2
        replace_all_instances: yes
        min_size: 2
        max_size: 2
        desired_capacity: 2
        vpc_zone_identifier:
          - "{{ ecs_vpc_subnet_id }}"
        tags:
          - App: pipeline
          - Name: telemetry-ecs-instance
          - Type: telemetry-ecs-instance
          - Owner: telemetry@mozilla.com
