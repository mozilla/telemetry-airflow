# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
# GCLOUD_SERVICE_KEY - key for gsutil rsync bootstrap and jobs with gcs
# GOOGLE_PROJECT_ID - airflow-dataproc
# GOOGLE_COMPUTE_ZONE - us-west1-b

version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  python: circleci/python@2.1.1

jobs:
#  generate_version_file:
#    docker:
#      - image: cimg/python:3.8.12
#    steps:
#      - checkout
#      - run:
#          name: Generate build version.json artifact
#          command: >
#            jq -n
#            --arg commit "$CIRCLE_SHA1"
#            --arg version "$CIRCLE_TAG"
#            --arg source "$CIRCLE_REPOSITORY_URL"
#            --arg build "$CIRCLE_BUILD_URL"
#            '{commit:$commit, version:$version, source:$source, build:$build}'
#            > version_jq.json

  tests:
    executor:
      name: python/default
      tag: 3.8.12
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
          pre-install-steps:
      - run:
          name: ðŸ§ª Verify requirements.txt is sync'ed with requirements.in
          command: |
            pip install pip-tools
            pip-compile --quiet
            git diff --exit-code requirements.txt
      - run:
          name: ðŸ§ª Pytest
          command: python -m pytest
      - run:
          name: ðŸ§ª Compile DAGs
          command: python -m py_compile dags/*.py
      - run:
          name: ðŸ§¹ Clean up
          command: find . -name *.pyc -delete

  test-environment:
    machine:
      image: ubuntu-2004:202111-01
      docker_layer_caching: true
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - run: docker-compose pull
      - run: docker-compose build
      - run: sudo chown -R 10001:10001 .
      - run:
          name: Check DAGs can be parsed and are correctly tagged
          #  Valid DAG tags are defined in: `bin/test-dag-tags.py`
          command: bash bin/test-parse

  deploy:
    docker:
      - image: docker:18.02.0-ce
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_PROJECT_USERNAME" "$CIRCLE_PROJECT_REPONAME" "$CIRCLE_BUILD_URL" > version.json
      - run: docker build -t app:build .
      - run:
          name: Deploy to Dockerhub
          command: |
            # Deploy main
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag app:build ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # Deploy a release tag...
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag app:build "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi

  sync_gcs:
    docker:
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:323.0.0
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gsutil rsync -d -r dataproc_bootstrap gs://moz-fx-data-prod-airflow-dataproc-artifacts/bootstrap
          gsutil rsync -d -r jobs gs://moz-fx-data-prod-airflow-dataproc-artifacts/jobs


workflows:
  build-test-deploy:
    jobs:
      - docker/publish:
          name: build
          deploy: false
          image: $CIRCLE_PROJECT_REPONAME
          tag: ${CIRCLE_SHA1:0:9}
          filters:
            tags:
              only: /.*/

      - tests:
          filters:
            tags:
              only: /.*/

      - test-environment:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - tests
          filters:
            tags:
              only: /.*/
            branches:
              only: main

      - sync_gcs:
          requires:
            - tests
          filters:
            tags:
              only: /.*/
            branches:
              only: main
