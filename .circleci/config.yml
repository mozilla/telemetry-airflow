# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
# GCLOUD_SERVICE_KEY - key for gsutil rsync bootstrap and jobs with gcs
# GOOGLE_PROJECT_ID - airflow-dataproc
# GOOGLE_COMPUTE_ZONE - us-west1-b
#

version: 2
jobs:
  build:
    docker:
      - image: docker:18.02.0-ce
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_PROJECT_USERNAME" "$CIRCLE_PROJECT_REPONAME" "$CIRCLE_BUILD_URL" > version.json
      - run: docker build -t app:build .

  test:
    docker:
      - image: python:3.7
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - run: pip install tox
      - run: python -m py_compile dags/*.py
      - run: find . -name *.pyc -delete
      - run: tox -e py37

  verify-requirements:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Verify that requirements.txt contains the right dependencies for this python version
          command: |
            pip install pip-tools
            pip-compile --quiet
            git diff --exit-code requirements.txt

  test-environment:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - run:
          command: |
            docker-compose pull
            docker-compose build
            # now take ownership of the folder
            sudo chown -R 10001:10001 .
      - run:
          name: Test if dag scripts can be parsed
          command: bash bin/test-parse

  deploy:
    docker:
      - image: docker:18.02.0-ce
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_PROJECT_USERNAME" "$CIRCLE_PROJECT_REPONAME" "$CIRCLE_BUILD_URL" > version.json
      - run: docker build -t app:build .
      - run:
          name: Deploy to Dockerhub
          command: |
            # Deploy master
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag app:build ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # Deploy a release tag...
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag app:build "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi

  sync_gcs:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/mozilla/telemetry-airflow
    steps:
      - checkout
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gsutil rsync -d -r dataproc_bootstrap gs://moz-fx-data-prod-airflow-dataproc-artifacts/bootstrap
          gsutil rsync -d -r jobs gs://moz-fx-data-prod-airflow-dataproc-artifacts/jobs


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test:
          filters:
            tags:
              only: /.*/

      - test-environment:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: master

      - sync_gcs:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: master
